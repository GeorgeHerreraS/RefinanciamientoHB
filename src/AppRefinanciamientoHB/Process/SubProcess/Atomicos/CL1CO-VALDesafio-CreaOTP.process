<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns5="http://schemas.tibco.com/bw/plugins/xml/5.0/RESTJSONExceptions" xmlns:ns6="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns7="http://www.tibco.com/pe/EngineTypes" xmlns:pfx="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/CO_ContrataCreditoConsumo.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/Datos-Arquitectura.xsd" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/Informacion.xsd" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/INFO.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/Resources/Schemas/cabecera.xsd" xmlns:pfx2="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/ValidaDesafio.xsd">
    <xsd:import namespace="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/CO_ContrataCreditoConsumo.xsd" schemaLocation="/Resources/Schemas/CO_ContrataCreditoConsumo.xsd"/>
    <xsd:import namespace="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/ValidaDesafio.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Resources/Schemas/cabecera.xsd" schemaLocation="/Resources/Schemas/cabecera.xsd"/>
    <xsd:import namespace="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/ValidaDesafio.xsd" schemaLocation="/Resources/Schemas/ValidaDesafio.xsd"/>
    <xsd:import namespace="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/INFO.xsd" schemaLocation="/Resources/Schemas/INFO.xsd"/>
    <pd:name>Process/SubProcess/Atomicos/CL1CO-VALDesafio-CreaOTP.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element ref="pfx3:cabecera"/>
                    <xsd:element ref="pfx2:Validar_Desafio_Request"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>72</pd:startX>
    <pd:startY>75</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="not(exists($_error/ns7:ErrorReport/MsgCode))">
                <xsl:choose>
                    <xsl:when test="$Parse-JSON/ns3:ActivityOutputClass/pfx2:Validar_Desafio_Response/ns4:Informacion/ns4:Codigo = 00">
                        <pfx2:Validar_Desafio_Response>
                            <xsl:for-each select="$Parse-JSON/ns3:ActivityOutputClass/pfx2:Validar_Desafio_Response/ns4:Informacion">
                                <ns4:Informacion>
                                    <ns4:Codigo>
                                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/INFO/CodigoOk"/>
                                    </ns4:Codigo>
                                    <ns4:Resultado>
                                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/INFO/MensajeOk"/>
                                    </ns4:Resultado>
                                    <ns4:Mensaje>
                                        <xsl:value-of select="ns4:Mensaje"/>
                                    </ns4:Mensaje>
                                </ns4:Informacion>
                            </xsl:for-each>
                            <xsl:for-each select="$Parse-JSON/ns3:ActivityOutputClass/pfx2:Validar_Desafio_Response/pfx2:Salida">
                                <pfx2:Salida>
                                    <pfx2:GlosaRespuesta>
                                        <xsl:value-of select="pfx2:GlosaRespuesta"/>
                                    </pfx2:GlosaRespuesta>
                                    <pfx2:IntentosFallidosRestantes>
                                        <xsl:value-of select="pfx2:IntentosFallidosRestantes"/>
                                    </pfx2:IntentosFallidosRestantes>
                                    <pfx2:Resultado>
                                        <xsl:value-of select="pfx2:Resultado"/>
                                    </pfx2:Resultado>
                                    <pfx2:CodigoOTP>
                                        <xsl:value-of select="pfx2:CodigoOTP"/>
                                    </pfx2:CodigoOTP>
                                    <pfx2:IdTrxOTP>
                                        <xsl:value-of select="pfx2:IdTrxOTP"/>
                                    </pfx2:IdTrxOTP>
                                </pfx2:Salida>
                            </xsl:for-each>
                        </pfx2:Validar_Desafio_Response>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx2:Validar_Desafio_Response>
                            <ns4:Informacion>
                                <ns4:Codigo>
                                    <xsl:value-of select="$Parse-JSON/ns3:ActivityOutputClass/pfx2:Validar_Desafio_Response/pfx2:Salida/pfx2:Resultado"/>
                                </ns4:Codigo>
                                <ns4:Resultado>
                                    <xsl:value-of select="$Parse-JSON/ns3:ActivityOutputClass/pfx2:Validar_Desafio_Response/pfx2:Salida/pfx2:GlosaRespuesta"/>
                                </ns4:Resultado>
                                <ns4:Mensaje>
                                    <xsl:value-of select="$Parse-JSON/ns3:ActivityOutputClass/pfx2:Validar_Desafio_Response/pfx2:Salida/pfx2:GlosaRespuesta"/>
                                </ns4:Mensaje>
                            </ns4:Informacion>
                            <pfx2:Salida>
                                <pfx2:GlosaRespuesta/>
                                <pfx2:IntentosFallidosRestantes>
                                    <xsl:value-of select="$Parse-JSON/ns3:ActivityOutputClass/pfx2:Validar_Desafio_Response/pfx2:Salida/pfx2:IntentosFallidosRestantes"/>
                                </pfx2:IntentosFallidosRestantes>
                                <pfx2:Resultado/>
                                <pfx2:CodigoOTP/>
                                <pfx2:IdTrxOTP/>
                            </pfx2:Salida>
                        </pfx2:Validar_Desafio_Response>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <pfx2:Validar_Desafio_Response>
                    <ns4:Informacion>
                        <ns4:Codigo>
                            <xsl:value-of select="$Parse-JSON/ns3:ActivityOutputClass/pfx2:Validar_Desafio_Response/pfx2:Salida/pfx2:Resultado"/>
                        </ns4:Codigo>
                        <ns4:Resultado>
                            <xsl:value-of select="$Parse-JSON/ns3:ActivityOutputClass/pfx2:Validar_Desafio_Response/pfx2:Salida/pfx2:GlosaRespuesta"/>
                        </ns4:Resultado>
                        <ns4:Mensaje>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/INFO/MensajeError"/>
                        </ns4:Mensaje>
                    </ns4:Informacion>
                    <pfx2:Salida>
                        <pfx2:GlosaRespuesta/>
                        <pfx2:IntentosFallidosRestantes/>
                        <pfx2:Resultado/>
                        <pfx2:CodigoOTP/>
                        <pfx2:IdTrxOTP/>
                    </pfx2:Salida>
                </pfx2:Validar_Desafio_Response>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx2:Validar_Desafio_Response"/>
    <pd:endX>742</pd:endX>
    <pd:endY>74</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://itg.santander.cl/AppRefinanciamientoHB/SubProcess/CL1CO-VALDesafio-CreaOTP</pd:targetNamespace>
    <pd:activity name="Autorizador">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>386</pd:x>
        <pd:y>76</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>POST</restMethodUI>
            <restResponseType>JSON</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <trustAllHostUI>true</trustAllHostUI>
            <restURI>%%WSENDPOINT/INTERNO/ValidaDesafio%%</restURI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <Timeout>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/WSENDPOINT/INTERNO/Timeout"/>
                </Timeout>
                <ns3:Parameters>
                    <Body>
                        <Text>
                            <type>
                                <xsl:value-of select="'application/json;charset=utf-8'"/>
                            </type>
                            <content>
                                <xsl:value-of select="tib:substring-before-last(substring-after($Render-JSON/ns3:ActivityOutputClass/jsonString, ':'), '}')"/>
                            </content>
                        </Text>
                    </Body>
                </ns3:Parameters>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>496</pd:x>
        <pd:y>204</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
            <fault>localname=JSONRenderException namespace=http://schemas.tibco.com/bw/plugins/xml/5.0/RESTJSONExceptions</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogEntrada">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>167</pd:x>
        <pd:y>76</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&quot;Entrada servicio ValidaDesafio :&quot;, $Start/root/pfx2:Validar_Desafio_Request)"/>
                </message>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogError">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>616</pd:x>
        <pd:y>204</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="'Error Autorizador'"/>
                </message>
                <msgCode>
                    <xsl:value-of select="'16'"/>
                </msgCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogSalida">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>618</pd:x>
        <pd:y>76</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="''"/>
                </message>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapError">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>742</pd:x>
        <pd:y>204</pd:y>
        <config>
            <element ref="pfx4:INFO"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="count($_error_Autorizador)>0">
                    <xsl:choose>
                        <xsl:when test="count($_error_Autorizador/ActivityErrors/ns5:JSONRestException)>0">
                            <pfx4:INFO>
                                <pfx4:Codigo>
                                    <xsl:value-of select="$_error_Autorizador/ActivityErrors/ns5:JSONRestException/msgCode"/>
                                </pfx4:Codigo>
                                <pfx4:Descripcion>
                                    <xsl:value-of select="$_error_Autorizador/ActivityErrors/ns5:JSONRestException/msg"/>
                                </pfx4:Descripcion>
                            </pfx4:INFO>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx4:INFO>
                                <pfx4:Codigo>
                                    <xsl:value-of select="$_error_Autorizador/ActivityErrors/ns6:ActivityTimedOutException/msgCode"/>
                                </pfx4:Codigo>
                                <pfx4:Descripcion>
                                    <xsl:value-of select="$_error_Autorizador/ActivityErrors/ns6:ActivityTimedOutException/msg"/>
                                </pfx4:Descripcion>
                            </pfx4:INFO>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <pfx4:INFO>
                        <pfx4:Codigo>
                            <xsl:value-of select="$_error/ns7:ErrorReport/MsgCode"/>
                        </pfx4:Codigo>
                        <pfx4:Descripcion>
                            <xsl:value-of select="$_error/ns7:ErrorReport/StackTrace"/>
                        </pfx4:Descripcion>
                    </pfx4:INFO>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>503</pd:x>
        <pd:y>75</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor ref="pfx2:Validar_Desafio_Response"/>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Autorizador/ns3:RESTOutput/msg"/>
                </jsonString>
            </ns3:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>266</pd:x>
        <pd:y>76</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityInputEditor>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx3:cabecera"/>
                            <xsd:element ref="pfx2:Validar_Desafio_Request"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInputClass>
                <xsl:for-each select="$Start/root">
                    <root>
                        <xsl:for-each select="cabecera">
                            <cabecera>
                                <xsl:for-each select="HOST">
                                    <HOST>
                                        <xsl:if test="USUARIO-ALT">
                                            <USUARIO-ALT>
                                                <xsl:value-of select="USUARIO-ALT"/>
                                            </USUARIO-ALT>
                                        </xsl:if>
                                        <xsl:if test="TERMINAL-ALT">
                                            <TERMINAL-ALT>
                                                <xsl:value-of select="TERMINAL-ALT"/>
                                            </TERMINAL-ALT>
                                        </xsl:if>
                                        <xsl:if test="CANAL-ID">
                                            <CANAL-ID>
                                                <xsl:value-of select="CANAL-ID"/>
                                            </CANAL-ID>
                                        </xsl:if>
                                    </HOST>
                                </xsl:for-each>
                                <xsl:if test="CanalFisico">
                                    <CanalFisico>
                                        <xsl:value-of select="CanalFisico"/>
                                    </CanalFisico>
                                </xsl:if>
                                <xsl:if test="CanalLogico">
                                    <CanalLogico>
                                        <xsl:value-of select="CanalLogico"/>
                                    </CanalLogico>
                                </xsl:if>
                                <xsl:if test="RutCliente">
                                    <RutCliente>
                                        <xsl:value-of select="RutCliente"/>
                                    </RutCliente>
                                </xsl:if>
                                <xsl:if test="RutUsuario">
                                    <RutUsuario>
                                        <xsl:value-of select="RutUsuario"/>
                                    </RutUsuario>
                                </xsl:if>
                                <xsl:if test="IpCliente">
                                    <IpCliente>
                                        <xsl:value-of select="IpCliente"/>
                                    </IpCliente>
                                </xsl:if>
                                <xsl:if test="InfoDispositivo">
                                    <InfoDispositivo>
                                        <xsl:value-of select="InfoDispositivo"/>
                                    </InfoDispositivo>
                                </xsl:if>
                                <xsl:if test="InfoDataPower">
                                    <InfoDataPower>
                                        <xsl:value-of select="InfoDataPower"/>
                                    </InfoDataPower>
                                </xsl:if>
                                <xsl:if test="InfoArquitectura">
                                    <InfoArquitectura>
                                        <xsl:value-of select="InfoArquitectura"/>
                                    </InfoArquitectura>
                                </xsl:if>
                                <xsl:for-each select="InfoGeneral">
                                    <InfoGeneral>
                                        <NumeroServidor>
                                            <xsl:value-of select="NumeroServidor"/>
                                        </NumeroServidor>
                                    </InfoGeneral>
                                </xsl:for-each>
                                <xsl:for-each select="ProcessStarter">
                                    <ProcessStarter>
                                        <RequestURI>
                                            <xsl:value-of select="RequestURI"/>
                                        </RequestURI>
                                    </ProcessStarter>
                                </xsl:for-each>
                            </cabecera>
                        </xsl:for-each>
                        <xsl:for-each select="pfx2:Validar_Desafio_Request">
                            <pfx2:Validar_Desafio_Request>
                                <pfx2:RutCliente>
                                    <xsl:value-of select="pfx2:RutCliente"/>
                                </pfx2:RutCliente>
                                <pfx2:MatrizDesafio>
                                    <xsl:value-of select="pfx2:MatrizDesafio"/>
                                </pfx2:MatrizDesafio>
                            </pfx2:Validar_Desafio_Request>
                        </xsl:for-each>
                    </root>
                </xsl:for-each>
            </ns3:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>LogEntrada</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogEntrada</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSalida</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>LogError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogError</pd:from>
        <pd:to>MapError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>Autorizador</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Autorizador</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>LogSalida</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>