<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns5="http://www.tibco.com/pe/EngineTypes" xmlns:ns6="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/Informacion.xsd" xmlns:pfx="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/CALLCO_FO.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns3="http://schemas.tibco.com/bw/plugins/xml/5.0/RESTJSONExceptions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/CALLCO_FO_RESPONSEOK.xsd" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/Resources/Schemas/Salida_COFO.xsd" xmlns:pfx2="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/INFO.xsd">
    <xsd:import namespace="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/INFO.xsd" schemaLocation="/Resources/Schemas/INFO.xsd"/>
    <xsd:import namespace="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/CALLCO_FO.xsd" schemaLocation="/Resources/Schemas/CALLCO_FO.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Resources/Schemas/Salida_COFO.xsd" schemaLocation="/Resources/Schemas/Salida_COFO.xsd"/>
    <xsd:import namespace="http://itg.santander.cl/AppRefinanciamientoHB/Resources/Schemas/CALLCO_FO_RESPONSEOK.xsd" schemaLocation="/Resources/Schemas/CALLCO_FO_RESPONSEOK.xsd"/>
    <pd:name>Process/SubProcess/Atomicos/callCO-FO.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:INPUT"/>
    <pd:startX>37</pd:startX>
    <pd:startY>98</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="not(exists($_error/ns5:ErrorReport))">
                <xsl:choose>
                    <xsl:when test="$Parse-JSON/ns2:ActivityOutputClass/pfx4:CallCoFo_Response/pfx4:resultado = 'OK'">
                        <xsl:for-each select="$Parse-JSON/ns2:ActivityOutputClass/pfx4:CallCoFo_Response">
                            <pfx:CallCoFo_Response>
                                <ns6:Informacion>
                                    <ns6:Codigo>
                                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/INFO/CodigoOk"/>
                                    </ns6:Codigo>
                                    <ns6:Resultado>
                                        <xsl:value-of select="pfx4:resultado"/>
                                    </ns6:Resultado>
                                    <ns6:Mensaje>
                                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/INFO/MensajeOk"/>
                                    </ns6:Mensaje>
                                </ns6:Informacion>
                                <xsl:for-each select="pfx4:Data">
                                    <pfx:Data>
                                        <xsl:if test="pfx4:email">
                                            <pfx:email>
                                                <xsl:value-of select="pfx4:email"/>
                                            </pfx:email>
                                        </xsl:if>
                                        <xsl:for-each select="pfx4:resumenCredito">
                                            <pfx:resumenCredito>
                                                <xsl:if test="pfx4:ValorCuota">
                                                    <pfx:ValorCuota>
                                                        <xsl:value-of select="pfx4:ValorCuota"/>
                                                    </pfx:ValorCuota>
                                                </xsl:if>
                                                <xsl:if test="pfx4:cantidadCuotas">
                                                    <pfx:cantidadCuotas>
                                                        <xsl:value-of select="pfx4:cantidadCuotas"/>
                                                    </pfx:cantidadCuotas>
                                                </xsl:if>
                                                <xsl:if test="pfx4:montoBruto">
                                                    <pfx:montoBruto>
                                                        <xsl:value-of select="pfx4:montoBruto"/>
                                                    </pfx:montoBruto>
                                                </xsl:if>
                                                <xsl:if test="pfx4:montoLiquido">
                                                    <pfx:montoLiquido>
                                                        <xsl:value-of select="pfx4:montoLiquido"/>
                                                    </pfx:montoLiquido>
                                                </xsl:if>
                                                <xsl:if test="pfx4:montoAPagar">
                                                    <pfx:montoAPagar>
                                                        <xsl:value-of select="pfx4:montoAPagar"/>
                                                    </pfx:montoAPagar>
                                                </xsl:if>
                                                <xsl:if test="pfx4:fechaPrimerVencimiento">
                                                    <pfx:fechaPrimerVencimiento>
                                                        <xsl:value-of select="pfx4:fechaPrimerVencimiento"/>
                                                    </pfx:fechaPrimerVencimiento>
                                                </xsl:if>
                                                <xsl:if test="pfx4:CAE">
                                                    <pfx:CAE>
                                                        <xsl:value-of select="pfx4:CAE"/>
                                                    </pfx:CAE>
                                                </xsl:if>
                                                <xsl:if test="pfx4:tasaMensual">
                                                    <pfx:tasaMensual>
                                                        <xsl:value-of select="pfx4:tasaMensual"/>
                                                    </pfx:tasaMensual>
                                                </xsl:if>
                                                <xsl:if test="pfx4:tasaAnual">
                                                    <pfx:tasaAnual>
                                                        <xsl:value-of select="pfx4:tasaAnual"/>
                                                    </pfx:tasaAnual>
                                                </xsl:if>
                                                <xsl:if test="pfx4:impuesto">
                                                    <pfx:impuesto>
                                                        <xsl:value-of select="pfx4:impuesto"/>
                                                    </pfx:impuesto>
                                                </xsl:if>
                                                <xsl:if test="pfx4:gastoNotarial">
                                                    <pfx:gastoNotarial>
                                                        <xsl:value-of select="pfx4:gastoNotarial"/>
                                                    </pfx:gastoNotarial>
                                                </xsl:if>
                                                <xsl:if test="pfx4:gastosTotales">
                                                    <pfx:gastosTotales>
                                                        <xsl:value-of select="pfx4:gastosTotales"/>
                                                    </pfx:gastosTotales>
                                                </xsl:if>
                                                <xsl:if test="pfx4:seguroDesgravamenMensual">
                                                    <pfx:seguroDesgravamenMensual>
                                                        <xsl:value-of select="pfx4:seguroDesgravamenMensual"/>
                                                    </pfx:seguroDesgravamenMensual>
                                                </xsl:if>
                                                <xsl:if test="pfx4:seguroDesgravamenAnual">
                                                    <pfx:seguroDesgravamenAnual>
                                                        <xsl:value-of select="pfx4:seguroDesgravamenAnual"/>
                                                    </pfx:seguroDesgravamenAnual>
                                                </xsl:if>
                                                <xsl:if test="pfx4:seguroCesantiaMensual">
                                                    <pfx:seguroCesantiaMensual>
                                                        <xsl:value-of select="pfx4:seguroCesantiaMensual"/>
                                                    </pfx:seguroCesantiaMensual>
                                                </xsl:if>
                                                <xsl:if test="pfx4:seguroCesantiaAnual">
                                                    <pfx:seguroCesantiaAnual>
                                                        <xsl:value-of select="pfx4:seguroCesantiaAnual"/>
                                                    </pfx:seguroCesantiaAnual>
                                                </xsl:if>
                                                <xsl:if test="pfx4:seguroVidaMensual">
                                                    <pfx:seguroVidaMensual>
                                                        <xsl:value-of select="pfx4:seguroVidaMensual"/>
                                                    </pfx:seguroVidaMensual>
                                                </xsl:if>
                                                <xsl:if test="pfx4:seguroVidaAnual">
                                                    <pfx:seguroVidaAnual>
                                                        <xsl:value-of select="pfx4:seguroVidaAnual"/>
                                                    </pfx:seguroVidaAnual>
                                                </xsl:if>
                                                <xsl:if test="pfx4:totalSeguroMensual">
                                                    <pfx:totalSeguroMensual>
                                                        <xsl:value-of select="pfx4:totalSeguroMensual"/>
                                                    </pfx:totalSeguroMensual>
                                                </xsl:if>
                                                <xsl:if test="pfx4:totalSeguroAnual">
                                                    <pfx:totalSeguroAnual>
                                                        <xsl:value-of select="pfx4:totalSeguroAnual"/>
                                                    </pfx:totalSeguroAnual>
                                                </xsl:if>
                                            </pfx:resumenCredito>
                                        </xsl:for-each>
                                        <xsl:for-each select="pfx4:rebajaCuposYCierreProductos">
                                            <pfx:rebajaCuposYCierreProductos>
                                                <xsl:for-each select="pfx4:productoMP">
                                                    <pfx:productoMP>
                                                        <xsl:if test="pfx4:numeroTarjeta">
                                                            <pfx:numeroTarjeta>
                                                                <xsl:value-of select="pfx4:numeroTarjeta"/>
                                                            </pfx:numeroTarjeta>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:descripcion">
                                                            <pfx:descripcion>
                                                                <xsl:value-of select="pfx4:descripcion"/>
                                                            </pfx:descripcion>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:cupoActualPesos">
                                                            <pfx:cupoActualPesos>
                                                                <xsl:value-of select="pfx4:cupoActualPesos"/>
                                                            </pfx:cupoActualPesos>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:cupoNuevoPesos">
                                                            <pfx:cupoNuevoPesos>
                                                                <xsl:value-of select="pfx4:cupoNuevoPesos"/>
                                                            </pfx:cupoNuevoPesos>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:cupoActualDolar">
                                                            <pfx:cupoActualDolar>
                                                                <xsl:value-of select="pfx4:cupoActualDolar"/>
                                                            </pfx:cupoActualDolar>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:cupoNuevoDolar">
                                                            <pfx:cupoNuevoDolar>
                                                                <xsl:value-of select="pfx4:cupoNuevoDolar"/>
                                                            </pfx:cupoNuevoDolar>
                                                        </xsl:if>
                                                    </pfx:productoMP>
                                                </xsl:for-each>
                                                <xsl:for-each select="pfx4:productoBG">
                                                    <pfx:productoBG>
                                                        <xsl:if test="pfx4:descripcion">
                                                            <pfx:descripcion>
                                                                <xsl:value-of select="pfx4:descripcion"/>
                                                            </pfx:descripcion>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:contrato">
                                                            <pfx:contrato>
                                                                <xsl:value-of select="pfx4:contrato"/>
                                                            </pfx:contrato>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:cupoActualPesos">
                                                            <pfx:cupoActualPesos>
                                                                <xsl:value-of select="pfx4:cupoActualPesos"/>
                                                            </pfx:cupoActualPesos>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:cupoNuevoPesos">
                                                            <pfx:cupoNuevoPesos>
                                                                <xsl:value-of select="pfx4:cupoNuevoPesos"/>
                                                            </pfx:cupoNuevoPesos>
                                                        </xsl:if>
                                                    </pfx:productoBG>
                                                </xsl:for-each>
                                            </pfx:rebajaCuposYCierreProductos>
                                        </xsl:for-each>
                                        <xsl:for-each select="pfx4:deudasARefinanciar">
                                            <pfx:deudasARefinanciar>
                                                <xsl:if test="pfx4:valorDolar">
                                                    <pfx:valorDolar>
                                                        <xsl:value-of select="pfx4:valorDolar"/>
                                                    </pfx:valorDolar>
                                                </xsl:if>
                                                <xsl:for-each select="pfx4:listaUG">
                                                    <pfx:listaUG>
                                                        <xsl:if test="pfx4:descripcion">
                                                            <pfx:descripcion>
                                                                <xsl:value-of select="pfx4:descripcion"/>
                                                            </pfx:descripcion>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:contrato">
                                                            <pfx:contrato>
                                                                <xsl:value-of select="pfx4:contrato"/>
                                                            </pfx:contrato>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:deudaTotal">
                                                            <pfx:deudaTotal>
                                                                <xsl:value-of select="pfx4:deudaTotal"/>
                                                            </pfx:deudaTotal>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:deudaPrepago">
                                                            <pfx:deudaPrepago>
                                                                <xsl:value-of select="pfx4:deudaPrepago"/>
                                                            </pfx:deudaPrepago>
                                                        </xsl:if>
                                                    </pfx:listaUG>
                                                </xsl:for-each>
                                                <xsl:for-each select="pfx4:listaBG">
                                                    <pfx:listaBG>
                                                        <xsl:if test="pfx4:descripcion">
                                                            <pfx:descripcion>
                                                                <xsl:value-of select="pfx4:descripcion"/>
                                                            </pfx:descripcion>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:contrato">
                                                            <pfx:contrato>
                                                                <xsl:value-of select="pfx4:contrato"/>
                                                            </pfx:contrato>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:deudaTotal">
                                                            <pfx:deudaTotal>
                                                                <xsl:value-of select="pfx4:deudaTotal"/>
                                                            </pfx:deudaTotal>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:deudaPrepago">
                                                            <pfx:deudaPrepago>
                                                                <xsl:value-of select="pfx4:deudaPrepago"/>
                                                            </pfx:deudaPrepago>
                                                        </xsl:if>
                                                    </pfx:listaBG>
                                                </xsl:for-each>
                                                <xsl:for-each select="pfx4:listaMP">
                                                    <pfx:listaMP>
                                                        <xsl:if test="pfx4:numeroTarjeta">
                                                            <pfx:numeroTarjeta>
                                                                <xsl:value-of select="pfx4:numeroTarjeta"/>
                                                            </pfx:numeroTarjeta>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:descripcion">
                                                            <pfx:descripcion>
                                                                <xsl:value-of select="pfx4:descripcion"/>
                                                            </pfx:descripcion>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:deudaTotalCLP">
                                                            <pfx:deudaTotalCLP>
                                                                <xsl:value-of select="pfx4:deudaTotalCLP"/>
                                                            </pfx:deudaTotalCLP>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:deudaTotalUSD">
                                                            <pfx:deudaTotalUSD>
                                                                <xsl:value-of select="pfx4:deudaTotalUSD"/>
                                                            </pfx:deudaTotalUSD>
                                                        </xsl:if>
                                                        <xsl:if test="pfx4:deudaPrepago">
                                                            <pfx:deudaPrepago>
                                                                <xsl:value-of select="pfx4:deudaPrepago"/>
                                                            </pfx:deudaPrepago>
                                                        </xsl:if>
                                                    </pfx:listaMP>
                                                </xsl:for-each>
                                                <xsl:for-each select="pfx4:total">
                                                    <pfx:total>
                                                        <xsl:if test="pfx4:montoLiquido">
                                                            <pfx:montoLiquido>
                                                                <xsl:value-of select="pfx4:montoLiquido"/>
                                                            </pfx:montoLiquido>
                                                        </xsl:if>
                                                    </pfx:total>
                                                </xsl:for-each>
                                            </pfx:deudasARefinanciar>
                                        </xsl:for-each>
                                    </pfx:Data>
                                </xsl:for-each>
                            </pfx:CallCoFo_Response>
                        </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx:CallCoFo_Response>
                            <ns6:Informacion>
                                <ns6:Codigo>
                                    <xsl:value-of select="$Parse-JSON-1/ns2:ActivityOutputClass/COFO_Response/WSError/codError"/>
                                </ns6:Codigo>
                                <ns6:Resultado>
                                    <xsl:value-of select="$Parse-JSON-1/ns2:ActivityOutputClass/COFO_Response/WSError/descError"/>
                                </ns6:Resultado>
                                <ns6:Mensaje>
                                    <xsl:value-of select="$Parse-JSON-1/ns2:ActivityOutputClass/COFO_Response/WSError/descError"/>
                                </ns6:Mensaje>
                            </ns6:Informacion>
                        </pfx:CallCoFo_Response>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
                <pfx:CallCoFo_Response>
                    <ns6:Informacion>
                        <ns6:Codigo>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/INFO/CodigoError"/>
                        </ns6:Codigo>
                        <ns6:Resultado>
                            <xsl:value-of select="$MapError/pfx2:INFO/pfx2:Descripcion"/>
                        </ns6:Resultado>
                        <ns6:Mensaje>
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/INFO/MensajeError"/>
                        </ns6:Mensaje>
                    </ns6:Informacion>
                </pfx:CallCoFo_Response>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx:CallCoFo_Response"/>
    <pd:endX>743</pd:endX>
    <pd:endY>91</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://itg.santander.cl/AppRefinanciamientoHB/SubProcess/callCO-FO</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>442</pd:x>
        <pd:y>235</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
            <fault>localname=JSONRenderException namespace=http://schemas.tibco.com/bw/plugins/xml/5.0/RESTJSONExceptions</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CO-FO">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>336</pd:x>
        <pd:y>97</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>POST</restMethodUI>
            <restResponseType>JSON</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <trustAllHostUI>true</trustAllHostUI>
            <restURI>%%WSENDPOINT/INTERNO/CallCoFO%%</restURI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <Timeout>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/WSENDPOINT/INTERNO/Timeout"/>
                </Timeout>
                <ns2:Parameters>
                    <Body>
                        <Text>
                            <type>
                                <xsl:value-of select="'application/json;charset=utf-8'"/>
                            </type>
                            <content>
                                <xsl:value-of select="tib:substring-before-last(substring-after($Render-JSON/ns2:ActivityOutputClass/jsonString, ':'), '}')"/>
                            </content>
                        </Text>
                    </Body>
                </ns2:Parameters>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>130</pd:x>
        <pd:y>98</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="concat(&quot;Entrada servicio CallCOFO :&quot;, $Start/pfx:INPUT)"/>
                </message>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogError">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>589</pd:x>
        <pd:y>236</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <message>
                    <xsl:value-of select="$Catch/exceptiondata/*"/>
                </message>
                <msgCode>
                    <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/INFO/CodigoError"/>
                </msgCode>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapError">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>737</pd:x>
        <pd:y>237</pd:y>
        <config>
            <element ref="pfx2:INFO"/>
        </config>
        <pd:inputBindings>
            <xsl:choose>
                <xsl:when test="count($_error_CO-FO)>0">
                    <xsl:choose>
                        <xsl:when test="count($_error_CO-FO/ActivityErrors/ns3:JSONRestException)>0">
                            <pfx2:INFO>
                                <pfx2:Codigo>
                                    <xsl:value-of select="$_error_CO-FO/ActivityErrors/ns3:JSONRestException/msgCode"/>
                                </pfx2:Codigo>
                                <pfx2:Descripcion>
                                    <xsl:value-of select="$_error_CO-FO/ActivityErrors/ns3:JSONRestException/msg"/>
                                </pfx2:Descripcion>
                            </pfx2:INFO>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx2:INFO>
                                <pfx2:Codigo>
                                    <xsl:value-of select="$_error_CO-FO/ActivityErrors/ns4:ActivityTimedOutException/msgCode"/>
                                </pfx2:Codigo>
                                <pfx2:Descripcion>
                                    <xsl:value-of select="$_error_CO-FO/ActivityErrors/ns4:ActivityTimedOutException/msg"/>
                                </pfx2:Descripcion>
                            </pfx2:INFO>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                    <pfx2:INFO>
                        <pfx2:Codigo>
                            <xsl:value-of select="$_error/ns5:ErrorReport/MsgCode"/>
                        </pfx2:Codigo>
                        <pfx2:Descripcion>
                            <xsl:value-of select="$_error/ns5:ErrorReport/StackTrace"/>
                        </pfx2:Descripcion>
                    </pfx2:INFO>
                </xsl:otherwise>
            </xsl:choose>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>610</pd:x>
        <pd:y>143</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor ref="pfx4:CallCoFo_Response"/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$CO-FO/ns2:RESTOutput/msg"/>
                </jsonString>
            </ns2:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>224</pd:x>
        <pd:y>98</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityInputEditor ref="pfx:INPUT"/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInputClass>
                <xsl:for-each select="$Start/pfx:INPUT">
                    <pfx:INPUT>
                        <pfx:canalLogico>
                            <xsl:value-of select="pfx:canalLogico"/>
                        </pfx:canalLogico>
                        <pfx:usuarioAltair>
                            <xsl:value-of select="pfx:usuarioAltair"/>
                        </pfx:usuarioAltair>
                        <pfx:entidad>
                            <xsl:value-of select="pfx:entidad"/>
                        </pfx:entidad>
                        <pfx:idOrigen>
                            <xsl:value-of select="pfx:idOrigen"/>
                        </pfx:idOrigen>
                        <pfx:idSolicitud>
                            <xsl:value-of select="pfx:idSolicitud"/>
                        </pfx:idSolicitud>
                        <pfx:fechaConsulta>
                            <xsl:value-of select="pfx:fechaConsulta"/>
                        </pfx:fechaConsulta>
                    </pfx:INPUT>
                </xsl:for-each>
            </ns2:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse-JSON-1">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>619</pd:x>
        <pd:y>35</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor ref="pfx3:COFO_Response"/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$CO-FO/ns2:RESTOutput/msg"/>
                </jsonString>
            </ns2:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse-JSON-2">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>449</pd:x>
        <pd:y>96</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor>
                <xsd:element name="COFO_RESULTADO">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="resultado" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityOutputEditor>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$CO-FO/ns2:RESTOutput/msg"/>
                </jsonString>
            </ns2:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>CO-FO</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>LogError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogError</pd:from>
        <pd:to>MapError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CO-FO</pd:from>
        <pd:to>Parse-JSON-2</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-JSON-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-JSON-2</pd:from>
        <pd:to>Parse-JSON-1</pd:to>
        <pd:xpathDescription>NOK</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-JSON-2/ns2:ActivityOutputClass/COFO_RESULTADO/resultado !='OK'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-JSON-2</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>